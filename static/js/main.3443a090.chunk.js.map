{"version":3,"sources":["components/StockApp Components/DisplayAsset.js","components/StockApp Components/DisplayChartAssets.js","components/StockApp Components/ProcessChartData.js","components/StockApp Components/AssetChart.js","components/StockApp Components/ProcessData.js","components/StockApp Components/DataFetch.js","static/images/avatar1.png","components/Navbar.js","components/Profile Components/Tilt.js","static/images/me.jpg","static/images/linkedin.svg","static/images/github.svg","components/Profile Components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["DisplayAsset","props","Text","Typography","asset","handleClick","assetSymbol","span","className","id","asset_symbol","src","asset_image","alt","index","value","asset_name","onClick","type","asset_price","change_24h","DisplayChartAssets","series","name","data","chartData","useState","chartType","setchart","labels","map","chunk","Date","toLocaleString","datasets","label","toUpperCase","fill","backgroundColor","borderColor","optionsCandle","chart","height","animations","enabled","theme","mode","plotOptions","candlestick","useFillColor","title","text","align","xaxis","yaxis","tooltip","useEffect","options","scales","yAxes","scaleLabel","display","labelString","ProcessChartData","prices","Array","isArray","x","time","y","Number","open","toFixed","high","low","close","setchartData","console","log","AssetChart","setchartType","assetsDataUrl","setassetsDataUrl","quoteTradingSymbol","baseTradingSymbol","interval","params","setParams","asset_chart_data","setasset_chart_data","handleChartType","e","target","assetName","toLowerCase","vs_currency","days","fetchData","React","useCallback","axios","then","response","catch","error","length","CircularProgress","color","DataFetch","setAssetSymbol","setAssetName","flag","setflag","asset_data","symbol","image","current_price","price_change_percentage_1h_in_currency","a","innerHTML","offset","CaretUpOutlined","sort","b","CaretDownOutlined","style","width","assets","setAssets","order","per_page","page","sparkline","price_change_percentage","Navbar","state","current","setState","key","this","padding","fontSize","selectedKeys","Item","icon","StockOutlined","to","paddingTop","Pic","ContactsOutlined","Component","Tilt","rest","tilt","useRef","VanillaTilt","init","ref","Profile","speed","max","data-tilt","data-tilt-glare","data-tilt-max-glare","Me","class","href","Linkedin","Github","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3443a090.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Typography, Row, Col } from 'antd';\r\nimport '../../static/css/DisplayAsset.css'\r\n\r\n\r\nfunction DisplayAsset(props) {\r\n\r\n    const { Text} = Typography;\r\n    const {asset, handleClick, assetSymbol} = props\r\n    // console.log(handleClick);\r\n    return (\r\n        <div>\r\n            <Row >\r\n                <Col span = {3}>\r\n                    <img className = \"assets-image\" key = {props.index} id = {asset.asset_symbol} src = {asset.asset_image !== \"\" ? asset.asset_image: \"\"} alt = \"\"/>\r\n                </Col>\r\n                <Col span = {8}>\r\n                    <Text key = {props.index} id = {asset.asset_symbol} value = {asset.asset_name} onClick = {handleClick} type={assetSymbol===asset.asset_symbol ? \"danger\" : \"secondary\"} >{asset.asset_name}</Text>\r\n                </Col>\r\n                <Col span = {8}>\r\n                    <Text  key = {props.index} type={assetSymbol===asset.asset_symbol ? \"danger\" : \"secondary\"} >${asset.asset_price}</Text>\r\n                </Col>\r\n                <Col span = {5}>\r\n                    <Text key = {props.index} type={asset.change_24h < 0 ? \"danger\" : \"success\"} >{(asset.change_24h > 0 ? (\"+\" + asset.change_24h) : asset.change_24h)}%</Text>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayAsset\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport ReactApexChart from 'react-apexcharts';\r\nimport '../../static/css/DisplayChartAssets.css'\r\n\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nfunction DisplayChartAssets(props) {\r\n    \r\n    const series = [{\r\n        name: props.assetSymbol,\r\n        data: props.chartData\r\n    }]\r\n\r\n    const [chart, setchart] = useState(props.chartType===\"line-chart\" ? \"area\" : \"candlestick\")\r\n    \r\n\r\n    const data = {\r\n        labels : props.chartData.map(chunk => new Date(chunk[0]).toLocaleString()),\r\n        datasets: [\r\n            {\r\n                label: props.assetSymbol.toUpperCase() + ' Chart',\r\n                data: props.chartData.map(chunk => chunk[1]),\r\n                fill: true,\r\n                backgroundColor: \"rgba(75,192,192,0.2)\",\r\n                borderColor: \"rgba(75,192,192,1)\"\r\n            }\r\n        ]\r\n        \r\n\r\n    }\r\n    \r\n    const options = {\r\n        scales: {\r\n            yAxes: [{\r\n                scaleLabel: {\r\n                    display: true,\r\n                    labelString: 'Price(USD)'\r\n                }\r\n            }]\r\n        }     \r\n    }\r\n    const optionsCandle = {\r\n        chart: {\r\n            type: 'candlestick',\r\n            height: 350,\r\n             animations: {\r\n                enabled: true,\r\n             }\r\n        },\r\n        theme: {\r\n            mode: 'dark'\r\n        },\r\n        plotOptions: {\r\n           \r\n            candlestick: {\r\n                useFillColor: false\r\n            }\r\n        },\r\n        title: {\r\n            text: props.assetSymbol.toUpperCase() + ' Price Chart',\r\n            align: 'left'\r\n        },\r\n        xaxis: {\r\n            type: 'datetime',\r\n            // range: new Date().getTime() - (new Date().getTime() - 518400000)\r\n        },\r\n        yaxis: {\r\n            tooltip: {\r\n                enabled: true,\r\n                theme: 'dark'\r\n            },\r\n            title: {\r\n                text: \"Price(USD)\",\r\n                // color: '#ffffff'\r\n            }\r\n        }\r\n    }   \r\n          \r\n\r\n    useEffect(() => {\r\n        setchart(props.chartType===\"line-chart\" ? \"area\" : \"candlestick\")\r\n        \r\n    }, [props.chartType])\r\n    \r\n    return (\r\n        <div className = 'chart-bg'>\r\n            {props.chartData && props.chartType!==\"line-chart\" && <ReactApexChart options={optionsCandle} series={series} type={\"candlestick\"} height={550}  />}\r\n            {props.chartData && props.chartType===\"line-chart\" && <Line data={data} options = {options} />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DisplayChartAssets\r\n","import React, { useEffect, useState } from 'react'\r\nimport DisplayChartAssets from './DisplayChartAssets'\r\n\r\n\r\nfunction ProcessChartData(props) {\r\n\r\n    let {data} = props\r\n    const precision = 3\r\n    const [chartData, setchartData] = useState(props.chartType===\"line-chart\" ? (data.prices) : ( Array.isArray(data) && data.map((chunk) => {\r\n            return(\r\n                {\r\n                    x: new Date(chunk.time),\r\n                    y: [Number(chunk.open).toFixed(precision), Number(chunk.high).toFixed(precision) , Number(chunk.low).toFixed(precision), Number(chunk.close).toFixed(precision)]\r\n                }\r\n            )\r\n        }))\r\n    )\r\n    // const chartData = data.map((chunk) => {\r\n    //     return(\r\n    //         {\r\n    //             x: new Date(chunk.time),\r\n    //             y: [chunk.open, chunk.high, chunk.low, chunk.close]\r\n    //         }\r\n    //     )\r\n    // })\r\n\r\n    useEffect(() => {\r\n        console.log(\"re-rendered\");\r\n        console.log(\"Re-rendered data ....\", data);\r\n        setchartData(props.chartType===\"line-chart\" ? (data.prices) : (data.map((chunk) => {\r\n            return(\r\n                {\r\n                    x: new Date(chunk.time),\r\n                    y: [Number(chunk.open).toFixed(precision), Number(chunk.high).toFixed(precision) , Number(chunk.low).toFixed(precision), Number(chunk.close).toFixed(precision)]\r\n                }\r\n            )\r\n        })))\r\n    }, [data])\r\n    \r\n\r\n    return (\r\n        <div>\r\n            {chartData && <DisplayChartAssets chartType = {props.chartType} assetSymbol = {props.assetSymbol} chartData = {chartData}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProcessChartData\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport ProcessChartData from './ProcessChartData'\r\nimport { Row, Col, Typography} from 'antd';\r\nimport { CircularProgress } from '@material-ui/core';\r\n\r\nfunction AssetChart(props) {\r\n    const {Text} = Typography\r\n    const {assetSymbol} = props\r\n    const [chartType, setchartType] = useState(\"candle-chart\")\r\n    const [assetsDataUrl, setassetsDataUrl] = useState(\"https://dev-api.shrimpy.io/v1/exchanges/binanceus/candles\")\r\n    const [params, setParams] = useState({quoteTradingSymbol: \"USD\",\r\n        baseTradingSymbol: assetSymbol,\r\n        interval : \"1m\"})\r\n\r\n    const [asset_chart_data, setasset_chart_data] = useState([])\r\n    // const headers = {'X-CoinAPI-Key': 'CCB0277D-9D40-4B99-B4AC-70A47139EECF'}\r\n\r\n    function handleChartType(e){\r\n        console.log(\"button pressed\");\r\n        setchartType(e.target.id)\r\n        setassetsDataUrl(e.target.id === \"line-chart\" ? (\"https://api.coingecko.com/api/v3/coins/\" + (props.assetName).toLowerCase() + \"/market_chart\") : \"https://dev-api.shrimpy.io/v1/exchanges/binanceus/candles\")\r\n        setParams(e.target.id ===\"line-chart\" ? {vs_currency : \"usd\", days: 3} : { quoteTradingSymbol: \"USD\", baseTradingSymbol: props.assetSymbol, interval : \"1m\"})\r\n        \r\n    }\r\n\r\n    const fetchData = React.useCallback(() => {\r\n        console.log(\"requested data..\", assetsDataUrl, params);\r\n        axios({\r\n            \"method\": \"GET\",\r\n            \"url\": (chartType === \"line-chart\" ? (\"https://api.coingecko.com/api/v3/coins/\" + (props.assetName).toLowerCase() + \"/market_chart\") : \"https://dev-api.shrimpy.io/v1/exchanges/binanceus/candles\"),\r\n            \"params\": (chartType ===\"line-chart\" ? {vs_currency : \"usd\", days: 3} : { quoteTradingSymbol: \"USD\", baseTradingSymbol: props.assetSymbol, interval : \"1m\"})\r\n        })\r\n        .then((response) => {\r\n            console.log('received', props.assetSymbol);\r\n            setasset_chart_data(response.data)\r\n            \r\n        })\r\n        .catch((error) => {\r\n            setasset_chart_data([])\r\n            console.log(error)\r\n        })\r\n    }, [props.assetSymbol, params, assetsDataUrl])\r\n\r\n\r\n    useEffect(() => {\r\n        console.log(assetsDataUrl, params);\r\n        setasset_chart_data([])\r\n        fetchData()\r\n        console.log(chartType);\r\n    }, [fetchData, assetsDataUrl, params, props.assetSymbol, chartType])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"button-chart\">\r\n                <Row>\r\n                    <Col span = {6}>\r\n                        <Text className = \"ant-btn check-class\" type = \"button\" id = \"candle-chart\" onClick = {handleChartType}>Candle Chart</Text>\r\n                    </Col>\r\n                    <Col span = {6}>\r\n                        <Text className = \"ant-btn check-class\" type = \"button\" id = 'line-chart' onClick = {handleChartType}>Line Chart</Text>  \r\n                    </Col>    \r\n                </Row>\r\n                <br />\r\n            </div>\r\n                {/* <Text type=\"secondary\">{assetSymbol.toUpperCase() ? assetSymbol.toUpperCase(): \"No Selected Coin\"}</Text> */}\r\n            {asset_chart_data.length===0 && <CircularProgress className = \"loader-class\" color=\"secondary\" />}\r\n            {asset_chart_data.length!==0 && chartType && <ProcessChartData chartType = {chartType} assetSymbol = {props.assetSymbol} data = {asset_chart_data}/>}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AssetChart\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Typography,  Row, Col } from 'antd';\r\nimport {CaretUpOutlined, CaretDownOutlined} from '@ant-design/icons';\r\nimport '../../static/css/ProcessData.css'\r\nimport DisplayAsset from './DisplayAsset';\r\nimport AssetChart from './AssetChart';\r\nimport { Scrollbars } from 'react-custom-scrollbars';\r\n    \r\n\r\n\r\n\r\nexport default function DataFetch(props) {\r\n\r\n    const {data} = props\r\n    const { Text } = Typography;\r\n    const [assetSymbol, setAssetSymbol] = useState(\"\")\r\n    const [assetName, setAssetName] = useState(\"\")\r\n    const [flag, setflag] = useState(true)\r\n    const asset_data = data.map(asset => {\r\n        \r\n        return(\r\n            {\r\n                asset_symbol: asset.symbol,\r\n                asset_name: asset.name,\r\n                asset_image : asset.image,\r\n                asset_price: asset.current_price,\r\n                change_24h: asset.price_change_percentage_1h_in_currency ? asset.price_change_percentage_1h_in_currency.toFixed(2) : 0\r\n            }\r\n        )\r\n    })\r\n\r\n    async function handleClick(e){\r\n        setAssetSymbol(e.target.id);\r\n        setAssetName(e.target.innerHTML)\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Assets re-rendered\");\r\n    }, [flag])\r\n\r\n    function handleAscendingSort() {\r\n        console.log(\"called\");\r\n        asset_data.sort(function(a, b){return a.change_24h - b.change_24h})\r\n        console.log(asset_data);\r\n        setflag(!flag)\r\n    }\r\n\r\n    return (\r\n        \r\n        <div>\r\n            {!asset_data && <h2>Processing...</h2>} \r\n            <div className=\"assets_wrapper\">\r\n                \r\n                <Row>\r\n                    <Col span = {6}>\r\n                        <div className = \"assets-heading\">\r\n                            <Row>\r\n                                <Col span = {24}>\r\n                                    <Row>\r\n                                        <Col offset={2} span = {6}>\r\n                                            <Text type=\"secondary\">Coin Name</Text>\r\n                                        </Col>\r\n                                        <Col offset = {1} span = {5}>\r\n                                            <Text type=\"secondary\">Price(USD)</Text>\r\n                                        </Col>\r\n                                        <Col offset = {1} span = {6}>\r\n                                            <Text type=\"secondary\">Change(24h)  \r\n                                            </Text>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <Row>   \r\n                                                <CaretUpOutlined onClick = {handleAscendingSort} />\r\n                                            </Row>\r\n                                            <Row>   \r\n                                                <CaretDownOutlined />\r\n                                            </Row>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Col>\r\n                                \r\n                                <hr />\r\n                            </Row>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span = {6}>\r\n                        <Scrollbars style={{ width: 350, height: 600 }}>\r\n                            {console.log(asset_data)}\r\n                            {asset_data.map((asset, index) => {\r\n                                return(\r\n                                    <div className = \"assets-grid\">\r\n                                        <Row>\r\n                                            <Col span = {24} className = \"assets-shadow\">\r\n                                                <DisplayAsset assetSymbol = {assetSymbol} index = {index} asset = {asset} handleClick = {handleClick} />  \r\n                                            </Col>\r\n                                            <hr />\r\n                                        </Row>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </Scrollbars>\r\n                    </Col>\r\n                    <Col span = {16}>\r\n                        {assetSymbol && <AssetChart assetSymbol = {assetSymbol} assetName = {assetName}/>}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Row } from 'antd';\r\nimport axios from 'axios'\r\nimport ProcessData from \"./ProcessData\"\r\nimport '../../static/css/DataFetch.css'\r\n\r\nexport default function DataFetch() {\r\n    const [assets, setAssets] = useState([])\r\n\r\n\r\n    // C99C093E-B248-42DD-A3D0-D07A88BB3D88\r\n    // 3B8CFDA2-B414-41E0-ADCD-D81C15DB6910\r\n    const assetsDataUrl = \"https://api.coingecko.com/api/v3/coins/markets\"\r\n    const params = {\r\n        vs_currency: \"usd\",\r\n        order: \"market_cap_desc\",\r\n        per_page: 100,\r\n        page: 1,\r\n        sparkline: false,\r\n        price_change_percentage: \"1h\"\r\n    }\r\n    // const headers = {'X-CoinAPI-Key': 'CCB0277D-9D40-4B99-B4AC-70A47139EECF'}\r\n\r\n    const fetchData = React.useCallback(() => {\r\n        axios({\r\n            \"method\": \"GET\",\r\n            \"url\": assetsDataUrl,\r\n            \"params\": params\r\n        })\r\n        .then((response) => {\r\n            setAssets(response.data)\r\n        })\r\n        .catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        fetchData()\r\n    }, [fetchData])\r\n\r\n    return (\r\n        <div>\r\n            <Row className = 'search-assets'>\r\n            </Row>\r\n            <ProcessData data = {assets}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/avatar1.e0421f57.png\";","import React from 'react'\r\nimport { Menu, Avatar, Row, Col } from 'antd';\r\nimport { StockOutlined, ContactsOutlined } from '@ant-design/icons';\r\nimport {\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport Pic from '../static/images/avatar1.png'\r\n\r\n\r\n\r\nclass Navbar extends React.Component {\r\n  state = {\r\n    current: 'stock-app',\r\n  };\r\n\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({ current: e.key });\r\n  };\r\n\r\n  render() {\r\n    const { current } = this.state;\r\n    return (\r\n      \r\n        <Menu style = {{padding: \"15px\",  fontSize: \"14px\"}} onClick={this.handleClick} selectedKeys={[current]} mode=\"horizontal\">\r\n          <Row>\r\n            <Col span = {4}>\r\n                <Menu.Item key = \"stock-app\" icon={<StockOutlined style={{ fontSize: '150%'}} />}>\r\n                  <Link to=\"/stock-app\">\r\n                      Stock App           \r\n                  </Link>\r\n                </Menu.Item>\r\n            </Col>\r\n            <Col span = {4}>\r\n                <Menu.Item key=\"app\" icon={<Avatar style={{ fontSize: '150%', paddingTop: \"-50px\" ,backgroundColor: 'white' }} src={Pic} />}>\r\n                  <Link to=\"/Profile\">\r\n                      Profile           \r\n                  </Link>\r\n                </Menu.Item>\r\n            </Col>\r\n            <Col span = {4}>\r\n                <Menu.Item key=\"Contact\" icon={<ContactsOutlined style={{ fontSize: '150%' }} />}>\r\n                  <Link to=\"/contact\">\r\n                      Contact           \r\n                  </Link>\r\n                </Menu.Item>\r\n            </Col>\r\n          </Row>\r\n        </Menu>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar","import React, { useEffect, useRef } from 'react'\r\nimport VanillaTilt from 'vanilla-tilt';\r\n\r\n\r\nfunction Tilt(props) {\r\n    const { options, ...rest } = props;\r\n  const tilt = useRef(null);\r\n\r\n  useEffect(() => {\r\n    VanillaTilt.init(tilt.current, options);\r\n  }, [options]);\r\n    return <div ref={tilt} {...rest} />;\r\n}\r\n\r\nexport default Tilt\r\n","export default __webpack_public_path__ + \"static/media/me.f0711320.jpg\";","export default __webpack_public_path__ + \"static/media/linkedin.b16cc69f.svg\";","export default __webpack_public_path__ + \"static/media/github.0404659e.svg\";","import React from 'react'\r\nimport './../../static/css/Profile.css'\r\nimport Tilt from './Tilt'\r\nimport Me from './../../static/images/me.jpg'\r\nimport Linkedin from './../../static/images/linkedin.svg'\r\nimport Github from './../../static/images/github.svg'\r\n// import { CryptoCard } from 'react-ui-cards';\r\n\r\n\r\nfunction Profile() {\r\n    const options = {\r\n        // scale: 1.2,\r\n        speed: 1000,\r\n        max: 30\r\n    };\r\n    \r\n\r\n    return (\r\n        \r\n            <div>\r\n                \r\n                    <div className=\"content\">\r\n                    <Tilt options={options}>\r\n                        <section className=\"glass\" data-tilt data-tilt-glare data-tilt-max-glare=\"0.8\">\r\n                            <header>\r\n                                <img src= {Me} alt=\"avatar\" class=\"avatar\" />\r\n                                <h1>Jay Patel</h1>\r\n                                <p>Ahmedabad, India</p>\r\n                            </header>\r\n                            <main>\r\n                                <p>Developer who is eager to learn</p>\r\n                                <div class=\"socialmedia\">\r\n                                    <a href=\"https://www.linkedin.com/in/jay-patel-6b8369152/\" id=\"linkedin\">\r\n                                        <img src={Linkedin} alt=\"linkedin\"/>\r\n                                        LinkedIn\r\n                                    </a>\r\n                                    <a href=\"https://github.com/beastjk\">\r\n                                        <img src= {Github} alt=\"github\"/>\r\n                                        GitHub\r\n                                    </a>\r\n                                </div>\r\n                            </main>\r\n                            <footer>\r\n                                <h3>SKILLS</h3>\r\n                                <div class=\"line\">\r\n                                <h5>JavaScript</h5>\r\n                                <h5>React</h5>\r\n                                <h5>HTML</h5>\r\n                                <h5>CSS</h5>\r\n                                <h5>Redux</h5>\r\n                                </div>\r\n                            </footer>\r\n                        </section>\r\n                    </Tilt>\r\n                    </div>\r\n                \r\n                {/* <div className=\"circle1\"></div>\r\n                <div className=\"circle2\"></div> */}\r\n                {/* <CryptoCard currencyName = \"Bitcoin\" currencyPrice = \"$37000\" currencyShortName = \"BTC\" chartColor = \"Yellow\" trend = \"(8.5%) $540\"  trendDirection = \"1\" chartData = {[37000, 38000, 37500, 37800]}/> */}\r\n            </div>\r\n        \r\n            \r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import 'semantic-ui-css/semantic.min.css'\nimport './App.less';\nimport DataFetch from './components/StockApp Components/DataFetch';\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Profile from './components/Profile Components/Profile';\n\n\n\nfunction App() {\n  \n  return (\n        <div>\n          <Router>\n            <Navbar/> \n            <div className=\"App\" style={{height: 400}}>\n              <Switch> \n                <Route exact path='/stock-app' component={DataFetch}></Route> \n                <Route exact path='/Profile' component={Profile}></Route> \n                {/* <Route exact path='/contact' component={}></Route>\n                <Route exact path='/projects' component={}></Route> */}\n              </Switch> \n            </div>\n          </Router> \n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}